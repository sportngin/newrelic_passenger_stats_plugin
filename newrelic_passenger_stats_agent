#! /usr/bin/env ruby

require "rubygems"
require "bundler/setup"
require "newrelic_plugin"
require File.join(File.dirname(__FILE__), 'lib/passenger_status_parser')
require File.join(File.dirname(__FILE__), 'lib/passenger_status_aggregator')

module PassengerStatsAgent

  class Agent < NewRelic::Plugin::Agent::Base

    agent_guid "com.sportngin.passenger-stats-agent"
    agent_version "0.1.3"
    agent_config_options :app_name, :ssh_command, :passenger_status_command, :app_hostnames
    agent_human_labels("Passenger Stats") { "Passenger Stats for #{app_name}" }

    def setup_metrics

    end

    def poll_cycle
      options = {
        :ssh_command => ssh_command,
        :passenger_status_command => passenger_status_command,
      }
      aggregator = PassengerStatusAggregator.new(options)
      aggregator.run
      record_passenger_status_metrics(aggregator)
    end

    private

    def record_passenger_status_metrics(aggregator)
      report_metric "passenger_stats.aggregate.processes.max", "Processes", aggregator.max
      report_metric "passenger_stats.aggregate.processes.booted", "Processes", aggregator.booted
      report_metric "passenger_stats.aggregate.processes.active", "Processes", aggregator.active
      report_metric "passenger_stats.aggregate.queued", "Requests", aggregator.queued
      report_metric "passenger_stats.aggregate.capacity", "Percent", aggregator.capacity
      report_metric "passenger_stats.aggregate.cpu", "Percent", aggregator.cpu
      report_metric "passenger_stats.aggregate.memory", "Megabytes", aggregator.memory
    end

  end

  # Register this agent with the component.
  NewRelic::Plugin::Setup.install_agent :passenger_stats, PassengerStatsAgent

  # Launch the agent; this never returns.
  NewRelic::Plugin::Run.setup_and_run

end
